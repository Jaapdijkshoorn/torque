Index: pam_pbssimpleauth.c
===================================================================
--- src/pam/pam_pbssimpleauth.c	(revision 1)
+++ src/pam/pam_pbssimpleauth.c	(working copy)
@@ -73,7 +73,6 @@
   char jobdirpath[PATH_MAX+1];
   int debug=0;
 
-  openlog(MODNAME,LOG_PID,LOG_USER);
   strcpy(jobdirpath,PBS_SERVER_HOME "/mom_priv/jobs");
 
   /* step through arguments */
@@ -84,15 +83,17 @@
     else if (!strcmp(*argv,"jobdir"))
       strncpy(jobdirpath,*argv,PATH_MAX);
     else
-      syslog(LOG_ERR,"unknown option: %s",*argv);
+      pam_syslog(pamh, LOG_ERR, "unknown option: %s", *argv);
     }
 
-  if (debug) syslog(LOG_INFO,"opening %s",jobdirpath);
+  if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "opening %s", jobdirpath);
 
   if ((jobdir = opendir(jobdirpath)) == NULL)
     {
-    if (debug) syslog(LOG_INFO,"failed to open jobs dir: %s",strerror(errno));
-    closelog();
+    if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "failed to open jobs dir: %s", strerror(errno));
+
     return PAM_IGNORE;
     }
 
@@ -102,15 +103,16 @@
 #if defined(PAM_CONV_AGAIN) && defined(PAM_INCOMPLETE)
   if (retval == PAM_CONV_AGAIN)
     {
+    /* HvB
     closelog();
+    */
     return PAM_INCOMPLETE;
     }
 #endif
 
   if ((retval != PAM_SUCCESS) || !username)
     {
-    syslog(LOG_ERR,"failed to retrieve username");
-    closelog();
+    pam_syslog(pamh, LOG_ERR, "failed to retrieve username");
     return PAM_SERVICE_ERR;
     }
 
@@ -118,7 +120,8 @@
 
   /* no early returns from this point on because we need to free ubuf */
 
-  if (debug) syslog(LOG_INFO,"username %s, %s",username,user_pwd ? "known" : "unknown");
+  if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "username %s, %s", username, user_pwd ? "known" : "unknown");
 
   if (!user_pwd)
     {
@@ -126,7 +129,9 @@
     }
   else if (user_pwd->pw_uid == 0)
     {
-    if (debug) syslog(LOG_INFO,"allowing uid 0");
+    if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "allowing uid 0");
+
     retval = PAM_SUCCESS;
     }
   else
@@ -139,12 +144,13 @@
         continue;
 
       snprintf(jobpath,PATH_MAX-1,"%s/%s",jobdirpath,jdent->d_name);
-      if (debug) syslog(LOG_INFO,"opening %s",jobpath);
+      if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "opening %s", jobpath);
 
       fp = open(jobpath, O_RDONLY, 0);
       if (fp < 0)
         {
-        syslog(LOG_ERR,"error opening job file");               
+  	pam_syslog(pamh, LOG_ERR, "error opening job file");
         continue;
         }
 
@@ -152,7 +158,7 @@
       if (amt != sizeof(xjob.ji_qs))
         {
         close(fp);
-        syslog(LOG_ERR,"short read of job file");               
+  	pam_syslog(pamh, LOG_ERR, "short read of job file");
         continue;
         }
 
@@ -160,11 +166,13 @@
         {
         /* odd, this really should be JOB_UNION_TYPE_MOM */
         close(fp);
-        syslog(LOG_ERR,"job file corrupt");               
+  	pam_syslog(pamh, LOG_ERR, "job file corrupt");
+
         continue;
         }
 
-      if (debug) syslog(LOG_INFO,"state=%d, substate=%d",xjob.ji_qs.ji_state,xjob.ji_qs.ji_substate);
+      if (debug) 
+  	pam_syslog(pamh, LOG_INFO, "state=%d, substate=%d", xjob.ji_qs.ji_state,xjob.ji_qs.ji_substate);
 
       if ((xjob.ji_qs.ji_un.ji_momt.ji_exuid == user_pwd->pw_uid) &&
           ((xjob.ji_qs.ji_substate == JOB_SUBSTATE_PRERUN) ||
@@ -173,7 +181,9 @@
         {
         /* success! */
         close(fp);
-        if (debug) syslog(LOG_INFO,"allowed by %s",jdent->d_name);
+        if (debug) 
+  		pam_syslog(pamh, LOG_INFO, "allowed by %s", jdent->d_name);
+
         retval = PAM_SUCCESS;
         break;
         }
@@ -188,10 +198,9 @@
   if (ubuf)
     free(ubuf);
     
-  if (debug) syslog(LOG_INFO,"returning %s",retval==PAM_SUCCESS ? "success" : "failed");
+  if (debug) 
+	pam_syslog(pamh, LOG_INFO, "returning %s", retval==PAM_SUCCESS ? "success" : "failed");
 
-  closelog();
-
   return retval;
 }
 
