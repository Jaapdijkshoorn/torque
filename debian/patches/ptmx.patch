--- torque-1.1.0p1/src/resmom/linux/mom_start.c	2004-06-02 19:54:45.000000000 +0100
+++ torque-1.1.0p1-ptmx/src/resmom/linux/mom_start.c	2004-07-27 04:15:33.000000000 +0100
@@ -78,6 +78,7 @@
 */
 #include <pbs_config.h>   /* the master config generated by configure */
 
+#include <stdlib.h> /* for unix98 pty api in open_master */
 #include <string.h>
 #include <unistd.h>
 #include <pwd.h>
@@ -356,48 +357,31 @@
  * piece of code depends on multiplexor /dev/ptc
  */
 
-#define PTY_SIZE 12
 
 int open_master(
 
   char **rtn_name)	/* RETURN name of slave pts */
 
   {
-  char 	       *pc1;
-  char 	       *pc2;
   int		ptc;	/* master file descriptor */
-  static char	ptcchar1[] = "pqrs";
-  static char	ptcchar2[] = "0123456789abcdef";
-  static char	pty_name[PTY_SIZE+1];	/* "/dev/[pt]tyXY" */
 
-  strncpy(pty_name, "/dev/ptyXY", PTY_SIZE);
-
-  for (pc1 = ptcchar1;*pc1 != '\0';++pc1) 
+  if ((ptc = open("/dev/ptmx",O_RDWR|O_NOCTTY)) >= 0) 
     {
-    pty_name[8] = *pc1;
-
-    for (pc2 = ptcchar2;*pc2 != '\0';++pc2) 
-      {
-      pty_name[9] = *pc2;
-
-      if ((ptc = open(pty_name,O_RDWR|O_NOCTTY,0)) >= 0) 
-        {
-        /* got a master, fix name to matching slave */
-
-        pty_name[5] = 't';	
-
-        *rtn_name = pty_name;
-
+    /* got a master, fix name to matching slave */
+       if (grantpt(ptc)<0 || unlockpt(ptc)<0)
+         {
+           close(ptc);
+           return(-1);
+         }
+       *rtn_name = (char *) ptsname(ptc); /* never to be freed */
+       if (*rtn_name == NULL)
+	  {
+            close(ptc);
+	    return(-1);
+          }
         return(ptc);
-        } 
-      else if (errno == ENOENT)
-        {
-        return(-1);	/* tried all entries, give up */
-        }
-      }
-    }
-
-  return(-1);	/* tried all entries, give up */
+     } 
+  return(-1);	/* give up */
   }  /* END open_master() */

